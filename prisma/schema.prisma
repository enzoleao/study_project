// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]

}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String    @id @default(uuid())
  firstName  String    @map("first_name")
  lastName   String    @map("last_name")
  email      String    @unique
  cpf        String    @unique
  birthday   DateTime  @db.Date
  password   String

  roleId     Int       @default(2) @map("role_id")
  role       Roles     @relation(fields: [roleId], references: [id])

  createdAt  DateTime  @map("created_at") @default(now())
  updatedAt  DateTime? @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  @@map("users")
}

model Roles {
  id Int @id @default(autoincrement())
  name String
  users Users[]
  permissions RolesHasPermissions[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("roles")
}

model Permissions {
  id Int @id @default(autoincrement())
  name String
  resource String
  type String
  roles RolesHasPermissions[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("permissions")
}

model RolesHasPermissions {
  roleId Int @map("role_id")
  role       Roles     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  
  permissionId Int @map("permission_id")
  permission   Permissions @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  
  @@id([roleId, permissionId])
  @@map("roles_has_permissions")
}